{"version":3,"sources":["logo.svg","movieContext.js","Coloumn.js","axios.js","dataContext.js","Row.js","Banner.js","request.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","e","movie","context","a","movieName","name","title","movieTrailer","id","movieTralerId","console","log","setModalOpen","setModalMovie","Column","isLargeRow","d","useContext","MovieContext","className","onClick","handleClick","src","poster_path","backdrop_path","instance","axios","create","baseURL","Row","fetchUrl","useState","movies","setMovies","useEffect","get","then","val","data","results","length","map","i","Coloumn","Banner","DataContext","style","background","overview","APIKEY","request","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentariesMovies","App","modalOpen","modalMovie","random","Math","floor","response","Provider","value","open","onClose","videoId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.233774cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nexport default React.createContext();","import React,{useContext} from 'react'\n\nimport MovieContext from './movieContext'\nimport movieTrailer from 'movie-trailer'\n\n\nasync function  handleClick(e, movie,context){\n    const movieName = (movie.name)?(movie.name):(movie.title)\n    const movieTralerId =  await movieTrailer( movieName, { id:true} )\n    console.log('handleClick',movieTralerId,movieName)\n    context.setModalOpen(true)\n    context.setModalMovie(movieTralerId)\n   \n}\n\nfunction Column({movie, isLargeRow}){\n    // console.log(\"mobies\",movie,isLargeRow)\n    // const d = useContext(DataContext);\n    const d = useContext(MovieContext);\n    console.log('contexttt',d)\n    return(\n        <div className=\"col\" onClick={(e)=>handleClick(e, movie,d)}>\n            <img className=\"image\" src={!isLargeRow ? `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`\n            : `https://image.tmdb.org/t/p/original/${movie.poster_path}`}/>\n            <div className=\"movie-title\">{(movie.name)?(movie.name):(movie.title)}</div>\n        </div>\n    )\n}\nexport default Column","import axios from \"axios\";\n\nconst instance = axios.create({baseURL:\"https://api.themoviedb.org/3\"})\n\nexport default instance","import React from 'react'\n\nexport default React.createContext();","import React, {useState,useEffect,useContext} from 'react'\nimport Coloumn from './Coloumn'\nimport axios from \"./axios\"\nimport YouTube from 'react-youtube';\nimport DataContext from './dataContext'\n\nfunction _onReady(e) {\n    // access to player in all event handlers via event.target\n    // e.target.pauseVideo();\n  }\nfunction Row({title, fetchUrl, isLargeRow}){\n    const [movies, setMovies] = useState([])\n\n    \n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n      };\n\n    useEffect(() => {\n        // effect\n        axios.get(fetchUrl).then(function(val){\n            // console.log(\"this is val\",val)\n            setMovies(val.data.results)\n        })\n\n    }, [fetchUrl])\n    // const d = useContext(DataContext);\n    console.log(\"RowCOntext\",fetchUrl)\n    return(\n        <>\n        <div className=\"cat-title\"><h1>{title}</h1></div>\n        <div className=\"row\">\n            \n            {(movies.length > 0) ? (\n               movies.map((val, i)=>(<Coloumn movie={val} key={i} isLargeRow={isLargeRow}/>))\n            ):(null)}\n            \n        </div>\n        {/* <YouTube videoId=\"ImMGNQ2OEjo\" opts={opts} /> */}\n\n        </>\n    )\n}\nexport default Row","import React,{useContext} from 'react'\nimport DataContext from './dataContext'\nfunction Banner(){\n    const d = useContext(DataContext);\n    console.log(\"ddwsdwwdw\",d)\n    return(\n        <header style={{\n            background:`url(https://image.tmdb.org/t/p/original/${d.backdrop_path})`\n        }} className=\"banner\">\n            <div className=\"banner-contents\">\n            <div className=\"banner-title\">{d.name}</div> \n            <button className=\"banner-button\">Play</button>\n            <button className=\"banner-button\">My list</button>\n            <div className=\"banner-desciption\">{d.overview}</div>\n            </div>\n        </header>\n    )\n}\nexport default Banner","const APIKEY = \"9231db9a28420c80df01d3b88b3db4e7\"\n\n\nconst request ={\n    fetchTrending :`/trending/all/week?api_key=${APIKEY}&language=en-US`,\n    fetchNetflixOriginals:`/discover/tv?api_key=${APIKEY}&with_networks=213`,\n    fetchTopRated:`/movie/top_rated?api_key=${APIKEY}&language=en-US`,\n    fetchActionMovies:`/discover/movie?api_key=${APIKEY}&with_genres=28`,\n    fetchComedyMovies:`/discover/movie?api_key=${APIKEY}&with_genres=35`,\n    fetchHorrorMovies:`/discover/movie?api_key=${APIKEY}&with_genres=27`,\n    fetchRomanceMovies:`/discover/movie?api_key=${APIKEY}&with_genres=10749`,\n    fetchDocumentariesMovies:`/discover/movie?api_key=${APIKEY}&with_genres=99`,\n}\n\n\nexport default request","import logo from './logo.svg';\nimport './custom.css';\nimport Row from './Row';\nimport Banner from './Banner'\nimport request from './request'\nimport React,{setMovies, useState, useEffect} from 'react'\nimport DataContext from './dataContext'\nimport axios from \"./axios\"\nimport movieTrailer from 'movie-trailer'\nimport YouTube from 'react-youtube';\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nimport ModalContext from './movieContext'\n\n\nconst opts = {\n  height: '390',\n  width: '100%',\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n  },\n};\n\n// const ModalContext = React.createContext();\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [modalOpen, setModalOpen] = useState(false)\n  const [modalMovie, setModalMovie] = useState(null)\n\n\n  useEffect(() => {\n    // effect\n\n    axios.get(request.fetchNetflixOriginals).then(function(val){\n      // console.log(\"this is val\",val)\n      const random =  (Math.floor(Math.random() * (val.data.results.length -1)));\n      console.log('random ',random)\n      setMovies(val.data.results[random])\n      movieTrailer( 'Oceans Eleven' )\n        .then( response => console.log( 'response',response ) )\n\n    })\n\n}, [])\nconsole.log('App.js')\n  return (\n    <div className=\"App\">\n            Netflix clone\n      <DataContext.Provider value={movies}>\n        <Banner/>\n      </DataContext.Provider>\n      <ModalContext.Provider  value ={{setModalMovie,setModalOpen}} >\n        <Row title=\"Top Netflix Originals\" fetchUrl ={request.fetchNetflixOriginals} isLargeRow data/>\n        <Row title=\"Top Trending\" fetchUrl ={request.fetchTrending}/>\n\n        <Row title=\"Top Rated\" fetchUrl ={request.fetchTopRated}/>\n      </ModalContext.Provider>\n      <Modal open={modalOpen} onClose={()=>setModalOpen(false)}>\n      <YouTube videoId={modalMovie} /> \n        </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}